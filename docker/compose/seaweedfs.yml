version: "3.8"
services:
  master:
    image: shac/seaweedfs:latest
    deploy:
      replicas: 3
      endpoint_mode: vip
      placement:
        constraints:
          - "node.role==manager"
    environment:
      MAX_VOLUME_SIZE: 128
      REPLICATION: 002
      NODE_ID: "{{.Node.ID}}"
      TASK_ID: "{{.Task.ID}}"
      SERVICE_ID: "{{.Service.ID}}"
    volumes:
      - ${SEAWEEDFS_DIR}/weed:/usr/bin/weed
      - ${SEAWEEDFS_DIR}/master:/data/snapshot
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1s
      timeout: 1s
      retries: 30
  volume:
    image: shac/seaweedfs:latest
    deploy:
      mode: global
      placement:
        constraints:
          - "node.role==manager"
    environment:
      MAX_VOLUMES: 4
      NODE_ID: "{{.Node.ID}}"
      TASK_ID: "{{.Task.ID}}"
      SERVICE_ID: "{{.Service.ID}}"
    volumes:
      - ${SEAWEEDFS_DIR}/weed:/usr/bin/weed
      - ${SEAWEEDFS_DIR}/volumes:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/ui/index.html"]
      interval: 1s
      timeout: 1s
      retries: 30
  filer:
    image: shac/seaweedfs:latest
    deploy:
      mode: global
    environment:
      NODE_ID: "{{.Node.ID}}"
      TASK_ID: "{{.Task.ID}}"
      SERVICE_ID: "{{.Service.ID}}"
    configs:
      - source: filer_toml
        target: /etc/seaweedfs/filer.toml
        mode: 0755
    volumes:
      - ${SEAWEEDFS_DIR}/weed:/usr/bin/weed
      - ${SEAWEEDFS_DIR}/filer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1s
      timeout: 1s
      retries: 30
networks:
  default:
    driver: overlay
    attachable: true
configs:
  filer_toml:
    file: ../build/seaweedfs/leveldb2.toml